package com.desaysv.libradio.utils;

import android.util.Log;

public class ASCIITools {

    private static final String TAG = "ASCIITools";

    /**
     * ASCII码hex字符串转HTML 编码
     * 每两个字符表示的16进制ASCII码解析成一个明文字符
     *
     * @param str
     * @return
     */
    public static String hex2Html(int[] str) {
        if (str == null){
            return "";
        }
        //按照底层的分析，文本编码包括EBU、UCS-2、UTF-8三种，
        //底层将所有的编码转换为unicode的编码，应用这边不需要再转换，直接使用HTML转换即可
        int[] realStr = str;//EBU2Unicode(str);
        StringBuilder sb = new StringBuilder();
        for (int b : realStr) {
            int decimal = Integer.parseInt(String.valueOf(b));
            //在ASCII表里面，141是留空，需要转一下
            if (decimal == 141){
                decimal = 233;
            }
            if (0 >= decimal) {
                continue;
            }
            sb.append("&#").append(addZeroInWhile(decimal, 3)).append(";");
        }
        Log.d(TAG,"znbtestHtml: "+sb.toString());
        return sb.toString();
    }
    /**
     * 该方法使用while进行补零，譬如将数字9变成09,009，就需要对9补上2个3个零
     *
     * @param num:需要补零的数字
     * @param len:补零之后数字的总长度
     **/
    public static String addZeroInWhile(int num, int len) {
        StringBuilder sf = new StringBuilder();
        sf.append(num);
        Log.d(TAG,"before addZeroInWhile: " + sf);
        int diff = len - sf.length();
        if (diff > 0) {
            while (sf.length() < len) {//若长度不足进行补零
                sf.insert(0, "0");//每次都在最前面补零
            }
        }
        return sf.toString();
    }

    /**
     * 将底层传上来的 EBU 编码。转成Unicode编码
     * 这里参考的是ds03的处理
     * @param str
     * @return
     */
    private static int[] EBU2Unicode(int[] str){
        int[] realStr = new int[str.length];
        for (int i = 0; i<str.length; i++){
            Log.d(TAG,"EBU2Unicode,str[i]: "+str[i]);
            int n = str[i] - 0x20;//EBU码值减去 0X20 即是FORMAT_MAP数值表下标
            if (n < 0 || n >= FORMAT_MAP.length){//避免数组越界
                n = 0;
            }
            int temp = FORMAT_MAP[n];
            realStr[i] = temp;
            Log.d(TAG,"EBU2Unicode,temp: "+temp);
        }
        return realStr;
    }

    /**
     * 广播系统EBU编码对应的UTF-8数值表
     */
    private static final int[] FORMAT_MAP = new int[]{
            0x0020, 0x0021, 0x0022, 0x0023, 0x00A4, 0x0025, 0x0026, 0x0027, 0x0028, 0x0029, 0x002A, 0x002B, 0x002C, 0x002D, 0x002E, 0x002F,
            0x0030, 0x0031, 0x0032, 0x0033, 0x0034, 0x0035, 0x0036, 0x0037, 0x0038, 0x0039, 0x003A, 0x003B, 0x003C, 0x003D, 0x003E, 0x003F,
            0x0040, 0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 0x0048, 0x0049, 0x004A, 0x004B, 0x004C, 0x004D, 0x004E, 0x004F,
            0x0050, 0x0051, 0x0052, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057, 0x0058, 0x0059, 0x005A, 0x005B, 0x005C, 0x005D, 0x2015, 0x005F,
            0x2551, 0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 0x0068, 0x0069, 0x006A, 0x006B, 0x006C, 0x006D, 0x006E, 0x006F,
            0x0070, 0x0071, 0x0072, 0x0073, 0x0074, 0x0075, 0x0076, 0x0077, 0x0078, 0x0079, 0x007A, 0x007B, 0x007C, 0x007D, 0x00AF, 0x0020,//Special
            0x00E1, 0x00E0, 0x00E9, 0x00E8, 0x00ED, 0x00EC, 0x00F3, 0x00F2, 0x00FA, 0x00F9, 0x00D1, 0x00C7, 0x015E, 0x00DF, 0x00A1, 0x0132,
            0x00E2, 0x00E4, 0x00EA, 0x00EB, 0x00EE, 0x00EF, 0x00F4, 0x00F6, 0x00FB, 0x00FC, 0x00F1, 0x00E7, 0x015F, 0x011F, 0x0131, 0x0133,
            0x00AA, 0x03B1, 0x00A9, 0x2030, 0x011E, 0x011B, 0x0148, 0x0151, 0x03C0, 0x20AC, 0x00A3, 0x0024, 0x2190, 0x2191, 0x2192, 0x2193,
            0x00BA, 0x00B9, 0x00B2, 0x00B3, 0x00B1, 0x0130, 0x0144, 0x0171, 0x00B5, 0x00BF, 0x00F7, 0x00B0, 0x00BC, 0x00BD, 0x00BE, 0x00A7,
            0x00C1, 0x00C0, 0x00C9, 0x00C8, 0x00CD, 0x00CC, 0x00D3, 0x00D2, 0x00DA, 0x00D9, 0x0158, 0x010C, 0x0160, 0x017D, 0x00D0, 0x013F,
            0x00C2, 0x00C4, 0x00CA, 0x00CB, 0x00CE, 0x00CF, 0x00D4, 0x00D6, 0x00DB, 0x00DC, 0x0159, 0x010D, 0x0161, 0x017E, 0x0111, 0x0140,
            0x00C3, 0x00C5, 0x00C6, 0x0152, 0x0177, 0x00DD, 0x00D5, 0x00D8, 0x00DE, 0x014A, 0x0154, 0x0106, 0x015A, 0x0179, 0x0166, 0x00F0,
            0x00E3, 0x00E5, 0x00E6, 0x0153, 0x0175, 0x00FD, 0x00F5, 0x00F8, 0x00FE, 0x014B, 0x0155, 0x0107, 0x015B, 0x017A, 0x0167, 0x0020,//Special
    };
}
